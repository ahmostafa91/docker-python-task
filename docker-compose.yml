version: '3.8'

services:
  # FastAPI backend service
  fastapi:
    image: myapp/fastapi:v1
    build:
      context: .  # Build context is the root of your project
      dockerfile: app/Dockerfile  # Dockerfile location
    env_file:
      - .env
    volumes:
      - ./app:/app
    container_name: fastapi
    expose:
      - "8000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    depends_on:
      - db
      - redis
    networks:
      - backend-network
      - proxy_network

  # PostgreSQL database
  db:
    image: postgres:16.8-alpine3.20
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend-network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis service
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - backend-network

  # Nginx reverse proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - fastapi
    networks:
      - proxy_network

networks:
  backend-network:
    driver: bridge
  proxy_network:
    driver: bridge

volumes:
  postgres_data:
